version: '3'

services:
    database:
        image: postgres
        volumes:
            - postgres-data:/var/lib/postgresql/data
    redis:
        image: redis
    worker:
        image: localhost:5000/photos
        entrypoint: /app/start-worker.sh
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./app:/app
            - local-photos:/photos/
        links:
            - database
            - redis
        environment:
            PHOTOS_DB_NAME: postgres
            PHOTOS_DB_USER: postgres
            PHOTOS_DB_PASSWORD: password
            PHOTOS_DB_HOST: database
            PHOTOS_DB_PORT: 5432
            CELERY_HOST: redis
            REDIS_HOST: redis
            DJANGO_SETTINGS_MODULE: photos.settings.dev
            # Read from .env
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    web:
        image: localhost:5000/photos
        command: ./manage.py runserver 0.0.0.0:8000
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - 8000:8000
        volumes:
          - ./app:/app
          - local-photos:/photos/
        links:
            - database
            - redis
            - worker
        environment:
            PHOTOS_DB_NAME: postgres
            PHOTOS_DB_USER: postgres
            PHOTOS_DB_PASSWORD: password
            PHOTOS_DB_HOST: database
            PHOTOS_DB_PORT: 5432
            CELERY_HOST: redis
            REDIS_HOST: redis
            DJANGO_SETTINGS_MODULE: photos.settings.dev
            # Read from .env
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

volumes:
    local-photos:
    postgres-data:
